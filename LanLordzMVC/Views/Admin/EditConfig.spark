<use pageBaseType="LanLordz.Views.BasePage[[LanLordz.Models.MasterConfigModel]]"/> 
<content name="title">Master Configuration</content>
<content name="headers"></content>
<content name="main">
    <h2>Master Configuration</h2>
    # using (Html.BeginForm())
    # {
     !{Html.AntiForgeryToken()}
     !{Html.ValidationSummary("There was an error updating the configuration.", new { @class = "ErrorText" })}
     <table class="AdminEditConfiguration">
      <tr class="AdminEditConfigurationHeading"><th colspan="2">Site Settings</th></tr>
      <tr class="AdminEditConfigurationItem"><td>Site Name:</td><td>!{Html.TextBox("SiteName", Model.Config.SiteName)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Site Tagline:</td><td>!{Html.TextBox("SiteTagline", Model.Config.SiteTagline)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Require Email Confirmation:</td><td>!{Html.CheckBox("ConfirmEmail", Model.Config.ConfirmEmail)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Log User On After Registration:</td><td>!{Html.CheckBox("LoginAfterRegister", Model.Config.LoginAfterRegister)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Site Copyright:</td><td>!{Html.TextBox("SiteCopyright", Model.Config.SiteCopyright)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Show Visitor Count:</td><td>!{Html.CheckBox("ShowVisitors", Model.Config.ShowVisitors)}</tr>
      <tr class="AdminEditConfigurationItem">
       <td>Default Theme:</td>
       <td>
         <select name="DefaultTheme">
          <option each="string theme in Model.AvailableThemes.Keys" value="${theme}" selected="selected?{Model.Config.DefaultTheme == theme}">${Model.AvailableThemes[theme]}</option>
         </select>
       </td>
      </tr>
      <tr class="AdminEditConfigurationItem">
       <td>Default Time Zone:</td>
       <td>
        <select name="DefaultTimeZone">
          <option each="string timezone in Model.AvailableTimezones.Keys" value="${timezone}" selected="selected?{Model.Config.DefaultTimeZone == timezone}">${Model.AvailableTimezones[timezone]}</option>
         </select>
       </td>
      </tr>
      <tr class="AdminEditConfigurationItem"><td>Use Google Analytics:</td><td>!{Html.CheckBox("UseGoogleAnalytics", Model.Config.UseGoogleAnalytics)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Google Analytics Account:</td><td>!{Html.TextBox("GoogleAnalyticsAccount", Model.Config.GoogleAnalyticsAccount)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Use CoralCDN for Static Content:</td><td>!{Html.CheckBox("UseCoralCdn", Model.Config.UseCoralCdn)}</td></tr>
      <tr class="AdminEditConfigurationHeading"><th colspan="2">Mail Settings</th></tr>
      <tr class="AdminEditConfigurationItem"><td>Admin Email:</td><td>!{Html.TextBox("AdminEmail", Model.Config.AdminEmail)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>SMTP Host Name:</td><td>!{Html.TextBox("SmtpHost", Model.Config.SmtpHost)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>SMTP Port:</td><td>!{Html.TextBox("SmtpPort", Model.Config.SmtpPort)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Confirmation Email Subject:</td><td>!{Html.TextBox("ConfirmEmailSubject", Model.Config.ConfirmEmailSubject)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Confirmation Email Body:</td><td>!{Html.TextArea("ConfirmEmailText", Model.Config.ConfirmEmailText)}<br />Use '{0}' to place the confirmation URL.</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Security Key Email Subject:</td><td>!{Html.TextBox("SecurityEmailSubject", Model.Config.SecurityEmailSubject)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Security Key Email Body:</td><td>!{Html.TextArea("SecurityEmailText", Model.Config.SecurityEmailText)}<br />Use '{0}' to place the security key.</td></tr>
      <tr class="AdminEditConfigurationHeading"><th colspan="2">Page Settings</th></tr>
      <tr class="AdminEditConfigurationItem"><td>Main Page HTML:</td><td>!{Html.TextArea("MainPageHtml", Model.Config.MainPageHtml)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Google Maps API Key:</td><td>!{Html.TextBox("GoogleMapsKey", Model.Config.GoogleMapsKey)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Use Recaptcha:</td><td>!{Html.CheckBox("UseRecaptcha", Model.Config.UseRecaptcha)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Recaptcha Public Key:</td><td>!{Html.TextBox("RecaptchaPublicKey", Model.Config.RecaptchaPublicKey)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>Recaptcha Private Key:</td><td>!{Html.TextBox("RecaptchaPrivateKey", Model.Config.RecaptchaPrivateKey)}</td></tr>
      <tr class="AdminEditConfigurationItem"><td>News Page Thread ID:</td><td>!{Html.TextBox("NewsThread", Model.Config.NewsThread)}</td></tr>
      <tr class="AdminEditConfigurationItem">
       <td>Crew Group:</td>
       <td>
        <select name="CrewGroup">
          <option each="var group in Model.Groups" value="${group.RoleID}" selected="selected?{Model.Config.CrewGroup == group.RoleID}">${group.Name}</option>
         </select>
       </td>
      </tr>
      <tr class="AdminEditConfigurationItem"><td></td><td><input type="submit" value="Save" /></td></tr>
     </table>
    # }
</content>
